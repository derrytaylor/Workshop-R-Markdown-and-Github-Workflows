---
title: "Analysis.script"
output: html_document
---

```{r load required packages}
if(!require(dplyr)){install.packages("dplyr")}   
if(!require(ggplot2)){install.packages("ggplot2")}   
if(!require(Hmisc)){install.packages("Hmisc")}   
if(!require(pastecs)){install.packages("pastecs")}   
if(!require(psych)){install.packages("psych")}   
if(!require(corrplot)){install.packages("corrplot")}   
if(!require(ggExtra)){install.packages("ggExtra")}   
if(!require(plotly)){install.packages("plotly")} 
if(!require(purrr)){install.packages("purrr")} 
if(!require(tidyr)){install.packages("tidyr")} 
if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
```

```{r reading the data}

data.2015 <- read.csv("2015.csv")
data.2016 <- read.csv("2016.csv")
data.2017 <- read.csv("2017.csv")
data.2018 <- read.csv("2018.csv")
data.2019 <- read.csv("2019.csv")

```


```{r merging the data}

library(dplyr)

#Change data.2018 "Corruption" variable to numeric
data.2018$Corruption <- as.numeric(data.2018$Corruption)

#Add "Year" variable to datasets
data.2015$Year <- "2015"
data.2016$Year <- "2016"
data.2017$Year <- "2017"
data.2018$Year <- "2018"
data.2019$Year <- "2019"

#Join datasets using full_join from dplyr package
data.raw <- data.2015 %>% 
  full_join(data.2016) %>%
  full_join(data.2017) %>%
  full_join(data.2018) %>%
  full_join(data.2019)

#Let's have a look at happiness score in the full dataset!

qplot(data.raw$Happiness.score)

#What an odd distribution! We notice some very high happiness scores that are out of the bounds for this variable (i.e., 0 to 10). Let's investigate the issue.

data.raw[order(data.raw$Happiness.score,decreasing = T),]

#It seems our dataset contains some data from Venus, Mars and Pluto, which does not fit within our research question. Let's remove these observations.

data.raw2 <- data.raw %>% filter(Country != c("Pluto","Venus","Mars"))

qplot(data.raw2$Happiness.score)

#Now our data is clean, let's save this dataset in a different object

data.clean <- data.raw2

#One last modification: Change the Year variable to factor
data.clean$Year <- as.factor(data.clean$Year)
```


```{r descriptive statistics}

summary(data.clean)

library(Hmisc)
Hmisc::describe(data.clean)

library(psych)
psych::describe(data.clean)

library(pastecs)
pastecs::stat.desc(data.clean)

#Descriptive statistics by group

psych::describe.by(data.clean, "Year")



```

```{r}
library(ggExtra)
library(plotly)
library(purrr)
library(tidyr)

#Let's plot some histograms

qplot(data.clean$Happiness.score)

#We can also plot many variables at the same time
data.clean %>%
  keep(is.numeric) %>% 
  gather() %>% 
  ggplot(aes(value)) +
    facet_wrap(~ key, scales = "free") +
    geom_histogram()

#Some initial exploratory plots

theme_set(theme_bw())  # pre-set the bw theme.

ggplot(data.clean, aes(GDP, Happiness.score)) + 
  geom_jitter(aes(col=Year)) + 
  geom_smooth(aes(col=Year), method="lm", se=F) +
  labs(title ="Happiness vs GDP by year")

ggplot(data.clean, aes(Freedom, Happiness.score)) + 
  geom_jitter(aes(col=Year)) + 
  geom_smooth(aes(col=Year), method="lm", se=F) +
  labs(title ="Happiness vs Freedom by year")

g <- ggplot(data.clean, aes(Social.support, Happiness.score)) + 
  geom_jitter(aes(col=Year)) + 
  geom_smooth(aes(col=Year), method="lm", se=F) +
  labs(title ="Happiness vs Social Support by year")

ggMarginal(g, type = "histogram", fill="transparent")


ggplot(data.clean, aes(Social.support, Happiness.score)) + 
  geom_jitter () + 
  geom_smooth(method="lm", se=F) +
  labs(title ="Happiness vs Social Support by year") + 
  facet_wrap(facets = vars(Year))

#Now let's try some interactive plots!

fig <- plot_ly(
  data.clean, x = ~GDP, y = ~Happiness.score,
  color = ~Year, size = ~GDP,
   #Hover text:
  text = ~paste("GDP: ", GDP, '$<br>Country:', Country)
)


```



```{r inferential statistics}
 
library(corrplot)


variables <- data.clean[,c("Happiness.score","Corruption","GDP","Social.support","Healthy.life.expectancy","Freedom","Generosity")]

correlation.matrix <- cor(variables,use="complete.obs")


corrplot(correlation.matrix, type = "upper", order = "hclust", 
         tl.col = "black", tl.srt = 45)

library("PerformanceAnalytics")

chart.Correlation(variables, histogram=TRUE, pch=19)

#Let's fit a regression model and check some of the assumptions
model <- lm(Happiness.score ~ Corruption + Freedom+ GDP + Generosity + Social.support + Healthy.life.expectancy, data = data.clean)

par(mfrow = c(2, 2))
plot(model)

summary(model)
```



